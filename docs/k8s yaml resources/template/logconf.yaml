apiVersion: v1
data:
  logstash.conf: |-
    # Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    # http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #
    # Default logstash.conf to be used incase no other match is to be found

    input {
      beats {
        port => 5044
        add_field => {
            namespace => "${NAMESPACE}"
        }
      }
    }
    filter{
    if "logfiles" in [tags] {
       grok {
           match => ["[log][file][path]", "opt/testgrid/%{NOTSPACE:container}/%{NOTSPACE:filename}"]
       }
       if [filename] == "wso2carbon.log" {
           grok {
               match => [ "message", "\[%{TIMESTAMP_ISO8601:timestamp}\]%{SPACE}\[%{INT:tenant_id}\]%{SPACE}\[\]%{SPACE}\[%{GREEDYDATA:timestamp}\]%{SPACE}%{LOGLEVEL:level}%{SPACE}{%{JAVACLASS:java_class}}%{SPACE}-%{SPACE}%{JAVALOGMESSAGE:log_message}" ]
               tag_on_failure => ["failed-to-parse"]
           }
       }
    }else{
       grok {
           match => ["[log][file][path]", "opt/testgrid/%{NOTSPACE:container}/%{NOTSPACE:filename}"]
       }
    }
    }
    output {
       elasticsearch {
           hosts => "${ELASTICSEARCH_HOST}"
           index => "%{[fields][podname]}-%{container}-%{filename}-%{[fields][podip]}-%{+YYYY.MM.dd}"
       }
       s3{
           access_key_id => "${S3_KEY_ID}"
           secret_access_key => "${S3_SECRET_KEY}"
           region => "${S3_REGION}"
           bucket => "${S3_BUCKET}"
           codec => "line"
           prefix => "${S3_LOG_PATH}/%{container}/%{filename}"
           time_file => 1
           canned_acl => "private"
       }
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: logstash-conf
